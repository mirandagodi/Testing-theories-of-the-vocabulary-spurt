---
title: "04 Step 1: Fit logistic curves"
author: "Miranda Gómez Díaz"
date: "2023-02-22"
output: html_document
---
```{r}
#Read needed packages
library(drc)
library(tidyverse)
library(RColorBrewer)
library(tibble)
library(gridExtra)
library(ggpubr)
```

```{r}
# Read files from previous steps
vocabulary_scores_03_df <- read_csv("data/03_vocabulary_scores.csv") 

LEQ_01_df <- read_csv("data/01_LEQ_columns.csv")
```

```{r}
# Clean and wrangle df for Step 1

# Keep necessary columns
step1_df <- vocabulary_scores_03_df %>%
  arrange(item_id_eng) %>%
  # Remove participants who were older than 18 months when they joined the study
  filter(!(starting_age > 18)) %>%
  # Remove duplicated rows (keep 1 row per baby per month) 
  group_by(study_id, n_months) %>%
  summarize(age = first(age), 
            starting_age = first(starting_age), 
            eng_completed = first(eng_completed),
            fr_completed = first(fr_completed),
            eng_est_total_produced = first(eng_est_total_produced), 
            fr_est_total_produced = first(fr_est_total_produced), 
            words_produced = first(words_produced),
            concepts_produced = first(concepts_produced),
            num_datapts = first(num_datapts)) %>%
  # Create vocabulary_score column (includes scores for English, French, word, and concept vocabulary scores) and vocabulary_type_step1 column
  rename('English' = 'eng_est_total_produced',
         'French' = 'fr_est_total_produced',
         'word' = 'words_produced',
         'concept' = 'concepts_produced') %>%
  pivot_longer(-c(study_id:fr_completed, num_datapts), names_to = "vocabulary_type_step1", values_to = "vocabulary_score") %>%
  # Remove rows of monolinguals' non-heard language
  ungroup() %>%
  filter(!(vocabulary_type_step1 == 'English' & is.na(eng_completed))) %>%
  filter(!(vocabulary_type_step1 == 'French' & is.na(fr_completed)))

# Create df with babies who were older then 18 months when they started study 
startage_over18 <- vocabulary_scores_03_df %>%
  filter(starting_age > 18) %>%
  distinct(study_id)

```

```{r}
# Determine language status of keepers
lang_status_df <- step1_df %>% 
  # Join coefficients and language exposure dataframes
  # Use left_join because LEQ dataset has full sample (N=125), as babies were not excluded from it
  left_join(LEQ_01_df, by = "study_id") %>% 
  group_by(study_id) %>% 
  summarize(lang_status = first(lang_status),
            cumulative_exp_Eng = first(cumulative_exp_Eng),
            cumulative_exp_Fre = first(cumulative_exp_Fre),
            cumulative_exp_L3 = first(cumulative_exp_L3),
            cumulative_exp_L4 = first(cumulative_exp_L4),
            starting_age = first(starting_age)) %>% 
  # Set exposure balance as the exposure to the non-dominant language (lower cumulative exposure)
  mutate(exposure_balance = case_when(
    cumulative_exp_Eng < cumulative_exp_Fre ~ cumulative_exp_Eng,
    cumulative_exp_Fre < cumulative_exp_Eng ~ cumulative_exp_Fre))
```

```{r}
# Fit logistic curve to individual data (single-language, word, and concept vocabularies)
logistic_curve <- step1_df %>%
  filter(!(eng_completed == FALSE & vocabulary_type_step1 == "English")) %>%
  filter(!(fr_completed == FALSE & vocabulary_type_step1 == "French")) %>%
  unite(id_lang, c(study_id, vocabulary_type_step1)) %>%
  # Remove scores for S044 in English, as baby was French monolingual and had scores of 0 in English
  filter(!(id_lang == "S044_English")) %>% 
  split(.$id_lang) %>%
  map(~drm(vocabulary_score~age, data = .,
                 fct=LL.3(names = c("Slope", "Upper Limit", "Midpoint"))))

#logistic_curve

# Extract midpoint and slope coefficients from the list
# Midpoint
midpoint_coefficients <- logistic_curve %>%
  map_dfr(~pluck(.,28,"Midpoint:(Intercept)")) %>%
  t() %>%
  as.data.frame() %>%
  rownames_to_column("id_vocabtype") %>%
  rename(midpoint = V1)
# Slope
slope_coefficients <- logistic_curve %>%
  map_dfr(~pluck(.,28,"Slope:(Intercept)")) %>%
  t() %>%
  as.data.frame() %>%
  rownames_to_column("id_vocabtype") %>%
  rename(slope = V1)
# Upper Limit
uplim_coefficients <- logistic_curve %>%
  map_dfr(~pluck(.,28,"Upper Limit:(Intercept)")) %>%
  t() %>%
  as.data.frame() %>%
  rownames_to_column("id_vocabtype") %>%
  rename(upper_limit = V1)
# Merge midpoint and slope dataframes
coefficients_df <- left_join(midpoint_coefficients, slope_coefficients, 
                             by = "id_vocabtype") %>%
  left_join(uplim_coefficients, by = "id_vocabtype") %>%
  separate(id_vocabtype, c("study_id", "vocabulary_type_step1")) %>%
  # Convert slope values to positive
  mutate(slope = abs(slope)) 

```

```{r}
# Sample descriptives
sample_descriptives <- step1_df %>% 
# Keep only one row per infant
  group_by(study_id) %>%
  filter(age == last(age),
         vocabulary_type_step1 == last(vocabulary_type_step1)) %>%
  ungroup() %>%
  # Join with LEQ data
  full_join(lang_status_df, by = c("study_id", "starting_age")) %>% 
  summarise(mean_startage = mean(starting_age),
            min_startage = min(starting_age),
            max_startage = max(starting_age),
            sd_startage = sd(starting_age),
            mean_datapts = mean(num_datapts),
            min_datapts = min(num_datapts),
            max_datapts = max(num_datapts),
            sd_datapts = sd(num_datapts),
            mean_expbal = mean(exposure_balance),
            min_expbal = min(exposure_balance),
            max_expbal = max(exposure_balance),
            sd_expbal = sd(exposure_balance))
```

```{r}
# Midpoint and slope descriptives
all_descriptives <- coefficients_df %>%
  group_by(vocabulary_type_step1) %>% 
  summarise(mean_midpoint = mean(midpoint),
            min_midpoint = min(midpoint),
            max_midpoint = max(midpoint),
            mean_slope = mean(slope),
            min_slope = min(slope),
            max_slope = max(slope),
            N = n()) 

```

```{r}
# Save dataframe as csv file
write_csv(step1_df, 'data/04_analysis_step_1_dataset.csv')
write_csv(coefficients_df, 'data/04_analysis_step_1_coefficients.csv')
```


