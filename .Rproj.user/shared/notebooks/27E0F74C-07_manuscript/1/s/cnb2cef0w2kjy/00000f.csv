"0","# Estimate vocabulary size by age with logistic equation (only spurters)"
"0",""
"0","#Join coefficients and full vocabulary data"
"0","logistic_spurters_df <- coefficients_04_df %>%"
"0","   # Join vocabulary scores dataframe"
"0","  full_join(vocabulary_scores_df, by = c(""study_id"", ""vocabulary_type_step1"")) %>%"
"0","  group_by(study_id) %>%"
"0","  # Remove babies with midpoint out of age range"
"0","  filter(midpoint>=16 & midpoint<=max(age)) %>%"
"0","  # Remove baby determined as non-spurter"
"0","  filter(!(study_id == ""S125"")) %>%"
"0","  # # Remove slope outliers"
"0","  # filter(slope < 22) %>%"
"0","  # Remove word and concept data from babies who were excluded in one language due to missing data or exposure change in that language"
"0","  filter(!((vocabulary_type_step1 == ""word"" | vocabulary_type_step1 == ""concept"") & study_id %in% to_be_excluded$study_id)) %>%"
"0","  mutate(id_voc = paste0(study_id, vocabulary_type_step1)) %>% # This will be used to filter out data in another df that was removed here"
"0","  # Round midpoint to one decimal place"
"0","  mutate(midpoint = round(midpoint, digits = 2))"
"0",""
"0","# Create dataframe with age for the logistic curve"
"0","ages <- tibble(age = seq(16, 30, by = 0.01))"
"0","id_voc_spurters <- logistic_spurters_df %>% distinct(study_id, vocabulary_type_step1, id_voc)"
"0","id_voc_ages_spurters <- merge(id_voc_spurters, ages) "
"0",""
"0","# Create the logistic curve with the equation's parameters"
"0","curve_spurters <- id_voc_ages_spurters %>% "
"0","  left_join(coefficients_04_df, by = c(""study_id"", ""vocabulary_type_step1"")) %>% "
"0","  mutate(vocabulary_type_step1 = factor(vocabulary_type_step1,"
"0","                levels=c(""English"", ""French"", ""concept"", ""word""))) %>%"
"0","  mutate(vocabulary_score = upper_limit / (1 + exp(-slope*(log(age) - log(midpoint)))),"
"0","         centered_age = age - midpoint, "
"0","         midpoint = round(midpoint, digits = 2)) %>% "
"0","  # Join with exposure data"
"0","  left_join(exposure_by_vocabtype, by = c(""study_id"", ""vocabulary_type_step1""))"
