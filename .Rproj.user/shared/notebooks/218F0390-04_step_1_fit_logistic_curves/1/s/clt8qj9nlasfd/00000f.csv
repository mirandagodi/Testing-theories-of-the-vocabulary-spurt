"0","# Fit logistic curve to individual data (single-language, word, and concept vocabularies): LL.3 (lower limit fixed at 0), continuous type of data. This data framme is used for following analyses."
"0","# THIS APPROACH ALLOWS FOR CURVE-FITTING AND CHECKING MODEL FIT"
"0",""
"0","# Clean and prepare dataframe"
"0","logistic_curve <- step1_df %>%"
"0","  filter(!(eng_completed == FALSE & vocabulary_type_step1 == ""English"")) %>%"
"0","  filter(!(fr_completed == FALSE & vocabulary_type_step1 == ""French"")) %>%"
"0","  unite(id_lang, c(study_id, vocabulary_type_step1)) "
"0",""
"0","# Create empty dataframes to fill with results from each baby in each vocabulary type"
"0","logistic_curve_coefficients_LL3_conti <- setNames(data.frame(matrix(ncol = 4, nrow = 0)), c(""id_lang"", ""midpoint"", ""slope"", ""upper_limit""))"
"0","model_AICs_LL3_conti <- setNames(data.frame(matrix(ncol = 5, nrow = 0)), c(""id_lang"",""AIC_LL.3"", ""AIC_Cubic"", ""AIC_Quad"", ""AIC_Lin"")) "
"0",""
"0",""
"0","  for(i in unique(logistic_curve$id_lang)) {"
"0","    unique_id_voc <- logistic_curve %>% filter(id_lang == i)"
"0","    individual_curve <- drm(vocabulary_score~age, # For continuous type"
"0","                            data = unique_id_voc,"
"0","                 fct=LL.3(names = c(""Slope"", ""Upper Limit"", ""Midpoint"")),"
"0","                 type = ""continuous"" # For continuous type"
"0","                 )"
"0","    # list.append(logistic_curve_coefficients, individual_curve)"
"0","    # print(i)"
"0","    # print(individual_curve)"
"0","    # Model fit dataframe"
"0","    individual_model_fit <- as.data.frame(mselect(individual_curve, linreg = TRUE, icfct = AIC)) %>% "
"0","      dplyr::select(IC) %>% "
"0","      rownames_to_column(""names"") %>% "
"0","      pivot_wider(names_from = names, names_prefix = ""AIC_"", values_from =IC) %>% "
"0","      mutate(id_lang = i) %>% "
"0","      dplyr::select(id_lang, AIC_LL.3, AIC_Cubic, AIC_Quad, AIC_Lin) "
"0","    "
"0","    model_AICs_LL3_conti[nrow(model_AICs_LL3_conti) + 1,] <- individual_model_fit[1:5]"
"0","    "
"0","    # print(individual_model_fit)"
"0","    individual_midpoint <- pluck(individual_curve,28,""Midpoint:(Intercept)"")"
"0","    individual_slope <- pluck(individual_curve,28,""Slope:(Intercept)"")"
"0","    individual_upper_limit <- pluck(individual_curve,28,""Upper Limit:(Intercept)"")"
"0","    "
"0","    plot(individual_curve, main = i, sub = paste0(""midpoint = "", as.character(individual_midpoint)))"
"0",""
"0","    logistic_curve_coefficients_LL3_conti[nrow(logistic_curve_coefficients_LL3_conti) + 1,] <- list(i, individual_midpoint, individual_slope, individual_upper_limit)"
"0","  }"
"2","Warning: NaNs produced"
"2","Warning: NaNs produced"
"2","Warning: NaNs produced"
